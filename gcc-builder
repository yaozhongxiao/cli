#!/usr/bin/env bash
#
# Copyright 2020 WorkGroup Participants. All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -e
SCRIPT_DIR=$(cd $(dirname $0); pwd -P)
GCC_CLEAN=false

GCC_VERSION=gcc-9.3.0
GCC_INSTALL_PREFIX=/usr/local/${GCC_VERSION}
GCC_REPO=https://github.com/gcc-mirror/gcc/archive/releases/gcc-9.3.0.tar.gz

if [ x"$(uname)" == x"Darwin" ];then
    echo "\nplease use the Linux system and try again!\n"
    exit -1
elif [ x"$(expr substr $(uname -s) 1 5)" == x"Linux" ];then
    echo "try to build and install ${GCC_VERSION}!"
elif [ x"$(expr substr $(uname -s) 1 10)" == x"MINGW32_NT" ];then
    echo "\nplease use the Linux system and try again!\n"
    exit -1
fi

BUILD_FORCE=true
if [ xtrue != x$BUILD_FORCE ];then
    read -p "try to build ${GCC_VERSION}[y/n]" option
fi

# 1. download sources
if [ x${GCC_CLEAN} == xtrue ];then
    echo "${GCC_VERSION} downloading ..."
    wget ${GCC_REPO}
    if [ -d ${GCC_VERSION} ]; then
       rm -rf ${GCC_VERSION}
    fi
    mkdir ${GCC_VERSION}
    tar -xzvf ${GCC_VERSION}.tar.gz --strip-components 1 -C ${GCC_VERSION}
fi
cd ${GCC_VERSION}

function install_prerequisition() {
    # install prerequisition utils
    yum install -y lbzip2 flex flex-devel file

    local option=$1
    echo "download_prerequisition $@"
    case $option in
        1)  echo "install from the gcc sources"
            base_url_mirror=http://ftp.tsukuba.wide.ad.jp/software/gcc/infrastructure
            sed -i -e "/^base_url=/a\
                base_url='${base_url_mirror}'" -e "s/^base_url=/#&/" ./contrib/download_prerequisites
            sh ./contrib/download_prerequisites
            ;;
        2)  echo 'install from http://ftp.tsukuba.wide.ad.jp/software/gcc/infrastructure'
            # install from sources
            if [ -f gmp-6.1.0.tar.bz2 -a -f mpfr-3.1.4.tar.bz2 -a -f mpc-1.0.3.tar.gz -f isl-0.18.tar.bz2];then
                return;
            fi
            base_url="http://ftp.tsukuba.wide.ad.jp/software/gcc/infrastructure/"
            wget ${base_url}/gmp-6.1.0.tar.bz2
            wget ${base_url}/mpfr-3.1.4.tar.bz2
            wget ${base_url}/mpc-1.0.3.tar.gz
            wget ${base_url}/isl-0.18.tar.bz2
            ;;
        3)  echo 'install with yum installer'
            yum install -y gmp gmp-devel mpfr mpfr-devel libmpc libmpc-devel -b current
            ;;
        *)  echo 'download nothing for prerequisition'
            ;;
    esac
}
# 2. download prerequisition
echo "${GCC_VERSION} prerequisites downloading ..."
install_prerequisition 1

set -x
# 3. config
echo "${GCC_VERSION} config ..."
if [ ! -d ${GCC_VERSION}-build ];then
    mkdir -p ${GCC_VERSION}-build
fi
cd ${GCC_VERSION}-build
../configure --prefix=${GCC_INSTALL_PREFIX} -enable-checking=release -enable-languages=c,c++ -disable-multilib

echo "${GCC_VERSION} building ..."
make -j4

echo "${GCC_VERSION} installing ..."
make install

# 4. config the gcc and libstdc++.* to available
cp -rf ${SCRIPT_DIR}/gcc-enable ${GCC_INSTALL_PREFIX}/gcc-enable
echo "source ${GCC_INSTALL_PREFIX}/gcc-enable" >> ~/.bashrc

