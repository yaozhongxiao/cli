#!/usr/bin/env bash
#
# Copyright 2023 WorkGroup Participants. All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ******************************************************************
# the detailed process refers to the following links
#   https://shakti.org.in/learn_with_shakti/c-debugging-gdb.html
#   https://github.com/riscv-software-src/riscv-isa-sim
#

set -e
script_dir="$(cd "$(dirname "$0")"; pwd -P)"
rdb_root=${script_dir}

elf_bin=""
rbb_port=2048
mem_addr=0x10110000
mem_size=0x20000
pc_addr=""
function usage() {
    cat << EOF
    Usage: $0 [options] app.elf
    Options:
    -m|--mem       addr       Set the memory start address, default "-m 0x10110000"
                              The addr should keep the same with address in linker script
    -ms|--mem-size size       Set the memory size, default "-ms 0x20000"
                              The size should bigger than app.elf
    -p|--port)     port       Set the rdb client/server rbb-port, default is 2048
                              The rbb-port should keep the same with openocd.cfg
    --pc)          addr       Set the entry pc addr for debugger default --pc=mem-addr
EOF
}

function options_parse() {
    while test $# -gt 0; do
        case "$1" in
            -ms|--mem-size)
              if [[ ! -z $2 ]] && [[ $2 != -* ]];then
                mem_size=$2
                shift
              fi
              ;;
            -m|--mem)
              if [[ ! -z $2 ]] && [[ $2 != -* ]];then
                mem_addr=$2
                shift
              fi
              ;;
            -p|--port)
              if [[ ! -z $2 ]] && [[ $2 != -* ]];then
                rbb_port=$2
                shift
              fi
              ;;
            --pc)
              if [[ ! -z $2 ]] && [[ $2 != -* ]];then
                pc_addr="--pc=$2"
                shift
              fi
              ;;
            -*|-h|--help)
                usage
                exit 0
                ;;
            *)
                elf_bin=$1
                ;;
        esac
        shift
    done
}

# parse options
echo $0 $@
options_parse $@

if [ -z "${elf_bin}" ];then
  echo "please input your debugged elf !"
  exit -1
fi

# start the rdbserver
echo "spike --rbb-port=${rbb_port} -m${mem_addr}:${mem_size} $pc_addr ${elf_bin}"
spike --rbb-port=${rbb_port} -m${mem_addr}:${mem_size} $pc_addr ${elf_bin}
