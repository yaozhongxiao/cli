#!/usr/bin/env bash
#
# Copyright 2020 WorkGroup Participants. All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e
SCRIPT_DIR=$(cd $(dirname $0); pwd -P)
GCC_CLEAN=false

GCC_VERSION=gcc-9.3.0
GCC_INSTALL_PREFIX=/usr/local/${GCC_VERSION}
GCC_REPO=https://github.com/gcc-mirror/gcc/archive/releases/gcc-9.3.0.tar.gz

if [ x"$(uname)" == x"Darwin" ];then
    echo "\nplease use the Linux system and try again!\n"
    exit -1
elif [ x"$(expr substr $(uname -s) 1 5)" == x"Linux" ];then
    echo "try to build and install ${GCC_VERSION}!"
elif [ x"$(expr substr $(uname -s) 1 10)" == x"MINGW32_NT" ];then
    echo "\nplease use the Linux system and try again!\n"
    exit -1
fi

BUILD_FORCE=true
if [ xtrue != x$BUILD_FORCE ];then
    read -p "try to build ${GCC_VERSION}[y/n]" option
fi

# 1. download sources
if [ x${GCC_CLEAN} == xtrue ];then
    echo "${GCC_VERSION} downloading ..."
    wget ${GCC_REPO}
    if [ -d ${GCC_VERSION} ]; then
       rm -rf ${GCC_VERSION}
    fi
    mkdir ${GCC_VERSION}
    tar -xzvf ${GCC_VERSION}.tar.gz --strip-components 1 -C ${GCC_VERSION}
fi
cd ${GCC_VERSION}
