#!/usr/bin/env bash
#
# Copyright 2020 WorkGroup Participants. All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

SCRIPT_DIR="$(cd "$(dirname "$0")"; pwd -P)"

ACTION_FORCE=false

# default command
OPT_HOST=130.146.100.212
OPT_PORT=22
OPT_USER=root
OPT_HOST_HOME=/${OPT_USER}/zhongxiao.yzx

BASTION_HOST=61.164.33.195
BASTION_PORT=3676
BASTION_USER=root
BASTION_HOST_HOME=/${BASTION_USER}/zhongxiao.yzx

function usage() {
    cat << EOF
    Usage: $0 [options]
    Options:
        --help      This Message.
        -p|--port      Set the remote server port.
        -h|--host      Set the remote server ip or hostname.
        -u|--user      Set the User to launch in remote server.
        -a|--anchor    Set the bastion to launch remote server
EOF
    exit -1
}

function options_parse() {
    while test $# -gt 0; do
        case "$1" in
            -h|--host)
                shift
                if [ x"$1" != x"-*" ];then
                    OPT_HOST=$1
                fi
                ;;
            -p|--port)
                shift
                if [ x"$1" != x"-*" ];then
                    OPT_PORT=$1
                fi
                ;;
            -u|--user)
                shift
                if [ x"$1" != x"-*" ];then
                    OPT_USER=$1
                fi
                ;;
            -*)
                echo "Unknown option \"$1\"." >&2
                usage
                ;;
            *)
                COMMANDS+=($1)
                ;;
        esac
        shift
    done
}

# options parsing
echo $0 $@
options_parse $@

TARGET=${COMMANDS[@]}
if [ -z $TARGET ];then
    echo "target is missed !"
    usage
fi

set -xe
ssh -p ${BASTION_PORT} ${BASTION_USER}@${BASTION_HOST} << shuffleprepare
    set -xe
    rm -rf ${BASTION_HOST_HOME}/${TARGET}
ssh -p ${OPT_PORT} ${OPT_USER}@${OPT_HOST} << remoteclean
    rm -rf ${OPT_HOST_HOME}/${TARGET}
    echo `date "+%Y-%m-%d %H:%M:%S"` >> ${OPT_HOST_HOME}/launch.log
remoteclean
shuffleprepare

scp -r -P${BASTION_PORT} ${TARGET} ${BASTION_USER}@${BASTION_HOST}:${BASTION_HOST_HOME}/${TARGET}

ssh -p ${BASTION_PORT} ${BASTION_USER}@${BASTION_HOST}<< shuffle
    set -xe
    scp -r -P ${OPT_PORT} ${BASTION_HOST_HOME}/${TARGET} ${OPT_USER}@${OPT_HOST}:${OPT_HOST_HOME}/${TARGET} 
shuffle

set +x
echo "$0 complete...."
